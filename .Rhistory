plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- sin(x)
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- sqrt(x) - 2
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- sin(x)
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
return(fx)
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- log(x)
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- sqrt(x) - 2
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- sqrt(x-2)
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- sqrt(x-2)
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- sqrt(x-2)
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- sqrt(x-2))
return(fx)
}
f <- function(x) {
fx <- sqrt((x-2))
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
fx <- sqrt(x-2)
f <- function(x) {
fx <- sqrt(x-2)
return(fx)
}
f <- function(x) {
fx <- sqrt(x)-2
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- sqrt(x-2)
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
f <- function(x) {
fx <- sqrt(2-x)
return(fx)
}
plot(input,
sapply(input,f),
type = "l", xlab = "x",
ylab = "f(x)")
myData <- read.csv(file="hsbdemo2.txt", header = TRUE)
myData
nrow(myData)
library(caret)
set.seed(1)
#splitting data into training and test sets
trainIndex <- createDataPartition(myData$X, p = 0.6)$Resample1
trainingSet <- myData[trainIndex, ]
testingSet <- myData[-trainIndex, ]
trainingSet
testingSet
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(prog ~ ses + female, method = "nb", trControl = train_control, data = myData)
modelNB$resample
confusionMatrix(modelNB)
myData <- read.csv(file="hsbdemo2.txt", header = TRUE)
summary(myData)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(prog ~ ses + female, method = "nb", trControl = train_control, data = myData)
modelNB$resample
confusionMatrix(modelNB)
train_control <- trainControl(method="repeatedcv", number=10, repeats=5)
modelNB <- train(prog ~ ses + female, method = "nb",
trControl = train_control, data = myData)
modelNB$resample
confusionMatrix(modelNB)
train_control <- trainControl(method="LOOCV")
modelNB <- train(prog ~ ses + female, method = "nb",
trControl = train_control, data = myData)
modelNB$results
data(iris)
dataIris <- iris
data(iris)
dataIris <- iris
train_control <- trainControl(method="cv", number=5)
modelSVM2 <- train(Diabetes ~., data = myData, method = "svmLinear", trControl = train_control)
set.seed(132)
train_control <- trainControl(method="cv", number=5)
modelSVM2 <- train(Diabetes ~., data = myData, method = "svmLinear", trControl = train_control)
confusionMatrix(modelSVM2)
library(caret)
set.seed(132)
train_control <- trainControl(method="cv", number=5)
modelSVM2 <- train(Diabetes ~., data = myData, method = "svmLinear", trControl = train_control)
modelSVM1 <- svm(Diabetes ~ ., data = myData, kernel = "linear")
library(caret)
set.seed(132)
train_control <- trainControl(method="cv", number=5)
modelSVM2 <- train(Diabetes ~., data = myData, method = "svmLinear", trControl = train_control)
set.seed(10111)
x <-  matrix(rnorm(40), 20, 2)
x
y <-  factor(rep(c(-1, 1), c(10, 10)))
y
x[y == 1, ] <- x[y == 1, ] + 3
x
myData <- data.frame(x,y)
head(myData)
colnames(myData) <- c("kadarGula", "konsumsiGula", "Diabetes")
head(myData)
plot(myData$konsumsiGula,myData$kadarGula, col = ifelse(y=="1", "blue", "red"), pch = 19)
install.packages("e1071")
library(e1071)
modelSVM1 <- svm(Diabetes ~ ., data = myData, kernel = "linear")
print(modelSVM1)
plot(modelSVM1, myData)
library(caret)
set.seed(132)
train_control <- trainControl(method="cv", number=5)
modelSVM2 <- train(Diabetes ~., data = myData, method = "svmLinear", trControl = train_control)
install.packages("e1071")
modelSVM2$resample
confusionMatrix(modelSVM2)
set.seed(143)
n <- 1000
x <- cbind(runif(n),runif(n))
eta  <- x[,2] - sin(10*x[,1])
prob <- 1/(1+exp(-5*eta))
y    <- 2*rbinom(n, 1, prob)-1
y  <- as.factor(y)
myData2 <- data.frame(x,y)
colnames(myData2) <- c("kadarGula", "konsumsiGula", "Diabetes")
head(myData2)
plot(myData2$konsumsiGula,myData2$kadarGula, col = ifelse(y=="1", "blue", "red"), pch = 19)
legend("topright", c("Y=1","Y=-1"),pch=19,col=c("blue", "red"), inset=0.05, bg=gray(1), cex=1.5)
library(e1071)
# set.seed(453)
modelSVM3 <-  svm(Diabetes ~ ., data = myData2, kernel = "radial")
print(modelSVM3)
plot(modelSVM3, myData2)
library(caret)
set.seed(543)
train_control2 <- trainControl(method="cv", number=10)
modelSVM4 <- train(Diabetes ~., data = myData2, method = "svmRadial", trControl = train_control2)
modelSVM4$resample
confusionMatrix(modelSVM4)
modelSVM2 <- train(Diabetes ~., data = myData, method = "svmLinear", trControl = train_control)
n <- 1000
x <- cbind(runif(n),runif(n))
eta  <- x[,2] - sin(10*x[,1])
prob <- 1/(1+exp(-5*eta))
y    <- 2*rbinom(n, 1, prob)-1
y  <- as.factor(y)
myData2 <- data.frame(x,y)
colnames(myData2) <- c("kadarGula", "konsumsiGula", "Diabetes")
head(myData2)
plot(myData2$konsumsiGula,myData2$kadarGula, col = ifelse(y=="1", "blue", "red"), pch = 19)
legend("topright", c("Y=1","Y=-1"),pch=19,col=c("blue", "red"), inset=0.05, bg=gray(1), cex=1.5)
set.seed(339933)
x <-  matrix(rnorm(70), 20, 2)
x
y <-  factor(rep(c(-1, 1), c(10, 10)))
y
x[y == 1, ] <- x[y == 1, ] + 3
x
Data <- data.frame(x,y)
head(Data)
colnames(Data) <- c("Prtmna", "Shll", "qlty")
head(Data)
plot(Data$Prtmna,Data$Shll, col = ifelse(y=="1", "blue", "red"), pch = 20)
library(e1071)
modelSVM1 <- svm(qlty ~ ., data = Data, kernel = "linear")
print(modelSVM1)
plot(modelSVM1, Data)
library(caret)
set.seed(123)
train_control <- trainControl(method="cv", number=5)
modelSVM2 <- train(qlty ~., data = Data, method = "svmLinear", trControl = train_control)
modelSVM2$resample
confusionMatrix(modelSVM2)
set.seed(134)
n <- 1500
x <- cbind(runif(n),runif(n))
eta  <- x[,2] - sin(10*x[,1])
prob <- 1/(1+exp(-5*eta))
y    <- 2*rbinom(n, 1, prob)-1
y  <- as.factor(y)
Data2 <- data.frame(x,y)
colnames(Data2) <- c("Prtmna", "Shll", "qlty")
head(Data2)
plot(Data2$Prtmna,Data2$Shll, col = ifelse(y=="1", "blue", "red"), pch = 20)
legend("topright", c("Y=1","Y=-1"),pch=20,col=c("blue", "red"), inset=0.05, bg=gray(1), cex=1.5)
library(e1071)
# set.seed(453)
modelSVM3 <-  svm(qlty ~ ., data = Data2, kernel = "radial")
print(modelSVM3)
plot(modelSVM3, Data2)
library(caret)
set.seed(543)
train_control2 <- trainControl(method="cv", number=10)
modelSVM4 <- train(qlty ~., data = Data2, method = "svmRadial", trControl = train_control2)
modelSVM4$resample
confusionMatrix(modelSVM4)
knitr::opts_chunk$set(echo = TRUE)
library(e1071)
# set.seed(330)
modelSVM3 <-  svm(qlty ~ ., data = Data2, kernel = "radial")
print(modelSVM3)
plot(modelSVM3, Data2)
library(caret)
set.seed(339)
train_control2 <- trainControl(method="cv", number=10)
modelSVM4 <- train(qlty ~., data = Data2, method = "svmRadial", trControl = train_control2)
modelSVM4$resample
confusionMatrix(modelSVM4)
x <-  matrix(rnorm(100), 20, 2)
x
y <-  factor(rep(c(-1, 1), c(10, 10)))
y
y <-  factor(rep(c(-1, 1), c(10, 10)))
y
knitr::opts_chunk$set(echo = TRUE)
myData <- read.csv(file="tinggi air jkt januari 2019.txt", header = TRUE)
myData
nrow(myData)
nrow(myData)
myData <- read.csv(file="tinggi air jkt januari 2019.txt", header = TRUE)
myData
nrow(myData)
myData <- read.csv(file="tinggi air jkt januari 2019.txt", header = TRUE)
head(myData)
nrow(myData)
myData <- read.csv(file="tinggi air jkt januari 2019.txt", header = TRUE)
head(myData)
nrow(myData)
myData <- read.csv(file="tinggi air jkt januari 2019.txt", header = TRUE)
head(myData)
data.frame(myData)
myData <- read.csv(file="data-jumlah-siswa-dan-guru-sekolah-menengah-atas-sma-2018.csv", header = TRUE)
myData <- read.csv(file="data-jumlah-siswa-dan-guru-sekolah-menengah-atas-sma-2018.csv", header = TRUE)
myData <- read.csv(file="data jumlah siswa dan guru sma jkt 2018.csv", header = TRUE)
head(myData)
myData <- read.csv(file="data jumlah siswa dan guru sma jkt 2018.csv", header = TRUE)
nrow(myData)
myData <- read.csv(file="data jumlah siswa dan guru sma jkt 2018.csv", header = TRUE)
myData
nrow(myData)
Data <- read.csv(file="data jumlah siswa dan guru sma jkt 2018.csv", header = TRUE)
Data
nrow(Data)
library(caret)
set.seed(1)
#splitting data into training and test sets
trainIndex <- createDataPartition(myData$X, p = 0.6)$Resample1
library(caret)
set.seed(1)
#splitting data into training and test sets
trainIndex <- createDataPartition(Data$X, p = 0.6)$Resample1
library(caret)
set.seed(1)
#splitting data into training and test sets
trainIndex <- createDataPartition(Data$npsn, p = 0.6)$Resample1
trainingSet <- Data[trainIndex, ]
testingSet <- Data[-trainIndex, ]
trainingSet
testingSet
library(caret)
set.seed(1)
#splitting data into training and test sets
trainIndex <- createDataPartition(Data$guru, p = 0.6)$Resample1
trainingSet <- Data[trainIndex, ]
testingSet <- Data[-trainIndex, ]
trainingSet
testingSet
myData <- read.csv(file="data jumlah siswa dan guru sma jkt 2018.csv", header = TRUE)
summary(myData)
Data <- read.csv(file="data jumlah siswa dan guru sma jkt 2018.csv", header = TRUE)
summary(Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(prog ~ ses + female, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(wilayah ~ kecamatan + status, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(wilayah ~ status + kecamatan, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ kecamatan + wilayah, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ wilayah + kecamatan, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(wilayah ~ status + npsn, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(wilayah ~ status + npsn, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(wilayah ~ status + bp, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(wilayah ~ bp + status, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(kecamatan ~ bp + status, method = "nb", trControl = train_control, data = Data)
Data <- read.csv(file="data jumlah siswa dan guru sma jkt 2018.csv", header = TRUE)
summary(Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(kecamatan ~ nama_sekolah + status, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(status ~ npsn + nama_sekolah, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(wilayah ~ kecamatan + status, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(wilayah ~ kecamatan + bp, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(wilayah ~ kecamatan + nama_sekolah, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(wilayah ~ kecamatan + nama_sekolah, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(wilayah ~ kecamatan + npsn, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=20)
modelNB <- train(kecamatan ~ status + bp, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(kecamatan ~ status + bp, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(kecamatan ~ status + npsn, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(kecamatan ~ status + nama_sekolah, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ bp + npsn, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ bp + nama_sekolah, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ npsn + nama_sekolah, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(wilayah ~ status + nama_sekolah, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(wilayah ~ guru + nama_sekolah, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(wilayah ~ guru + pd, method = "nb", trControl = train_control, data = Data)
modelNB <- train(nama_sekolah ~ guru + pd, method = "nb", trControl = train_control, data = Data)
modelNB <- train(kecamatan ~ guru + pd, method = "nb", trControl = train_control, data = Data)
modelNB <- train(kecamatan ~ npsn + pd, method = "nb", trControl = train_control, data = Data)
modelNB <- train(kecamatan ~ npsn + status, method = "nb", trControl = train_control, data = Data)
modelNB <- train(kecamatan ~ wilayah + status, method = "nb", trControl = train_control, data = Data)
modelNB <- train(kecamatan ~ kecamatan + status, method = "nb", trControl = train_control, data = Data)
modelNB <- train(kecamatan ~ kecamatan + wilayah, method = "nb", trControl = train_control, data = Data)
modelNB <- train(status ~ kecamatan + wilayah, method = "nb", trControl = train_control, data = Data)
modelNB <- train(npsn ~ kecamatan + wilayah, method = "nb", trControl = train_control, data = Data)
modelNB <- train(npsn ~ status + wilayah, method = "nb", trControl = train_control, data = Data)
modelNB <- train(pd ~ npsn + guru, method = "nb", trControl = train_control, data = Data)
modelNB <- train(guru ~ pd + status, method = "nb", trControl = train_control, data = Data)
modelNB <- train(status ~ pd + guru, method = "nb", trControl = train_control, data = Data)
modelNB <- train(status ~ pd + guru, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ pd + guru, method = "nb", trControl = train_control, data = Data)
modelNB$resample
confusionMatrix(modelNB)
modelNB <- train(status ~ kecamatan + guru, method = "nb", trControl = train_control, data = Data)
modelNB <- train(status ~ npsn + guru, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ npsn + guru, method = "nb", trControl = train_control, data = Data)
modelNB <- train(status ~ nama_sekolah + guru, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ nama_sekolah + guru, method = "nb", trControl = train_control, data = Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ npsn + guru, method = "nb", trControl = train_control, data = Data)
modelNB$resample
confusionMatrix(modelNB)
myData <- read.csv(file="hsbdemo2.txt", header = TRUE)
summary(myData)
train_control <- trainControl(method="repeatedcv", number=10, repeats=5)
modelNB <- train(prog ~ ses + female, method = "nb",
trControl = train_control, data = myData)
modelNB$resample
confusionMatrix(modelNB)
train_control <- trainControl(method="repeatedcv", number=10, repeats=5)
modelNB <- train(status ~ npsn + guru, method = "nb",
trControl = train_control, data = Data)
modelNB$resample
confusionMatrix(modelNB)
Data <- read.csv(file="data jumlah siswa dan guru sma jkt 2018.csv", header = TRUE)
summary(Data)
train_control <- trainControl(method="LOOCV")
modelNB <- train(status ~ npsn + guru, method = "nb",
trControl = train_control, data = Data)
Data <- read.csv(file="data jumlah siswa dan guru sma jkt 2018.csv", header = TRUE)
Data
nrow(Data)
library(caret)
set.seed(1)
#splitting data into training and test sets
trainIndex <- createDataPartition(Data$guru, p = 0.6)$Resample1
trainingSet <- Data[trainIndex, ]
testingSet <- Data[-trainIndex, ]
trainingSet
testingSet
Data <- read.csv(file="data jumlah siswa dan guru sma jkt 2018.csv", header = TRUE)
summary(Data)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ npsn + guru, method = "nb", trControl = train_control, data = Data)
modelNB$resample
confusionMatrix(modelNB)
train_control <- trainControl(method="repeatedcv", number=10, repeats=5)
modelNB <- train(status ~ npsn + guru, method = "nb", trControl = train_control, data = Data)
modelNB$resample
confusionMatrix(modelNB)
train_control <- trainControl(method="LOOCV")
modelNB <- train(status ~ npsn + guru, method = "nb", trControl = train_control, data = Data)
modelNB$results
knitr::opts_chunk$set(echo = TRUE)
library(caret)
train_control <- trainControl(method="cv", number=10)
modelNB <- train(status ~ npsn + guru, method = "nb", trControl = train_control, data = Data)
modelNB$resample
confusionMatrix(modelNB)
